version: '3.8'

services:
  # Base de datos MySQL
  mysql-db:
    image: mysql:8.0
    container_name: planilla-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-sistema_planilla}
      MYSQL_USER: ${MYSQL_USER:-planilla_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-planilla_pass123}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sistema_planilla.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - planilla-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Backend API Node.js
  api-backend:
    image: ${DOCKER_USERNAME:-rbardales88}/planilla-api:latest
    container_name: planilla-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: mysql-db
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE:-sistema_planilla}
      DB_USER: ${MYSQL_USER:-planilla_user}
      DB_PASSWORD: ${MYSQL_PASSWORD:-planilla_pass123}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      FRONTEND_URL: ${CORS_ORIGIN:-http://localhost:8080}
    ports:
      - "3000:3000"
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - planilla-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend Angular
  angular-frontend:
    image: ${DOCKER_USERNAME:-rbardales88}/planilla-frontend:latest
    container_name: planilla-frontend
    restart: unless-stopped
    environment:
      API_URL: ${API_URL:-http://34.176.222.150:3000}
    ports:
      - "8080:80"
    depends_on:
      api-backend:
        condition: service_healthy
    networks:
      - planilla-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  planilla-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local